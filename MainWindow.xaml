<Window x:Name="mainWindow" x:Class="autoOff.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:autoOff"
        mc:Ignorable="d"
        Title="SleeperAgent" Height="450" Width="550"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="true"
        MouseLeftButtonDown="Window_MouseLeftButtonDown">

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <SolidColorBrush x:Key ="Dark" Color="#050505"/>
        <SolidColorBrush x:Key ="Light" Color="#fbfcff"/>
        <SolidColorBrush x:Key ="DarkerLight" Color="#80838c"/>
        <SolidColorBrush x:Key ="AccentBlueish" Color="#0b35b3"/>
        <SolidColorBrush x:Key ="LighterDark" Color="#505059"/>
        <Style x:Key="Styl" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Light}"/>
            <Setter Property="BorderThickness" Value="2.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Light}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{StaticResource Dark}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource DarkerLight}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Dark}"/>
                                <Setter Property="Foreground" Value="{StaticResource Dark}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyleTime" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource Light}"/>
            <Setter Property="Foreground" Value="{StaticResource Light}"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="7" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DarkerLight}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LighterDark}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border CornerRadius="20"  Background="{StaticResource Dark}" HorizontalAlignment="Left" Width="550">
        <Grid Background="Transparent" HorizontalAlignment="Left" Width="551">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label  Content="SleeperAgent" Foreground="{StaticResource Light}" VerticalAlignment="Center" HorizontalAlignment="Left" Width="90" Margin="20,0,0,0"/>
            <Button IsTabStop="False" Style="{DynamicResource Styl}" x:Name="btnClose" Content="X" BorderBrush="{x:Null}" Background="{x:Null}" Margin="498,0,0,0" Click="btnClose_Click" Cursor="Hand" RenderTransformOrigin="0.5,-0.067" Height="32" VerticalAlignment="Center" HorizontalAlignment="Left" Width="33"/>
            <Button IsTabStop="False" Grid.Row="1" Style="{DynamicResource Styl}" x:Name="startStopBtn" Content="Start" Margin="376,0,0,31" Background="{x:Null}" BorderBrush="{StaticResource Light}" HorizontalAlignment="Left" Width="155" Height="38" VerticalAlignment="Bottom" Cursor="Hand" Click="startStopBtn_Click"/>
            <Grid HorizontalAlignment="Left" Height="330" Margin="20,35,0,0" Grid.Row="1" VerticalAlignment="Top" Width="350">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="175"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="110"/>
                    <RowDefinition Height="110"/>
                    <RowDefinition Height="110"/>
                </Grid.RowDefinitions>
                <Label Content="Start Time:" Foreground="{StaticResource Light}" VerticalAlignment="Center"/>
                <Label Content="End Time:" Foreground="{StaticResource Light}" VerticalAlignment="Center" Grid.Row="1"/>
                <Label Content="Interval (minutes):" Foreground="{StaticResource Light}" VerticalAlignment="Center" Grid.Row="2"/>
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Style="{DynamicResource TextBoxStyleTime}" x:Name="startTimeHour" Grid.Column="0" Width="50" Height="40" VerticalAlignment="Center" TextChanged="startTimeHour_TextChanged"/>
                    <Label Content=":" VerticalAlignment="Center" Foreground="{StaticResource Light}" Grid.Column="1" HorizontalAlignment="Center"/>
                    <TextBox Style="{DynamicResource TextBoxStyleTime}" x:Name="startTimeMinute" Grid.Column="2" Width="50" Height="40" VerticalAlignment="Center" TextChanged="startTimeMinute_TextChanged"/>
                </Grid>
                <Grid Grid.Column="1" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Style="{DynamicResource TextBoxStyleTime}" x:Name="endTimeHour" Grid.Column="0" Width="50" Height="40" VerticalAlignment="Center" TextChanged="endTimeHour_TextChanged"/>
                    <Label Content=":" VerticalAlignment="Center" Foreground="{StaticResource Light}" Grid.Column="1" HorizontalAlignment="Center"/>
                    <TextBox Style="{DynamicResource TextBoxStyleTime}" x:Name="endTimeMinute" Grid.Column="2" Width="50" Height="40" VerticalAlignment="Center" TextChanged="endTimeMinute_TextChanged"/>
                </Grid>
                <TextBox Style="{DynamicResource TextBoxStyleTime}" x:Name="intervalMinutes" Grid.Column="1" Grid.Row="2" Height="40" Width="50" VerticalAlignment="Center" HorizontalAlignment="Left" TextChanged="intervalMinutes_TextChanged"/>

            </Grid>
            <Label Content="Times are in 24h format (midnight is 00:00)" HorizontalAlignment="Left" Height="30" Margin="20,17,0,0" Grid.Row="1" VerticalAlignment="Top" Width="296" Foreground="{StaticResource Light}"/>
            <Grid HorizontalAlignment="Left" Height="167" Margin="366,77,0,0" Grid.Row="1" VerticalAlignment="Top" Width="165">
                <Label Content="What do you want to happen:" Foreground="{StaticResource Light}" Margin="-12,0,0,0"/>
                <StackPanel Margin="10,30,0,0" >
                    <RadioButton FontSize="15" x:Name="shutdownRadio" Content="Shutdown" Foreground="{StaticResource Light}" GroupName="ActionGroup" IsChecked="True" VerticalAlignment="Center"/>
                    <RadioButton FontSize="15" x:Name="hibernateRadio" Content="Hibernate" Foreground="{StaticResource Light}" GroupName="ActionGroup" IsChecked="False" VerticalAlignment="Center"/>
                    <RadioButton FontSize="15" x:Name="sleepeRadio" Content="Sleep Mode" Foreground="{StaticResource Light}" GroupName="ActionGroup" IsChecked="False" VerticalAlignment="Center"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>

</Window>
